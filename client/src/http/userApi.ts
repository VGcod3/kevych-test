import { createApi } from "@reduxjs/toolkit/query/react";
import { User, UserRes } from "@/types/user/user.types";
import { API_URL } from "@/http/index.api";
import { axiosBaseQuery } from "@/http/index.api";

// Create the RTK Query slice
export const userApi = createApi({
  reducerPath: "userApi",
  baseQuery: axiosBaseQuery({
    baseUrl: API_URL, // Set your API base URL
  }),
  endpoints: (builder) => ({
    // Fetch user profile
    getUserProfile: builder.query<UserRes, void>({
      query: () => ({
        url: "/users/profile",
        method: "GET",
      }),
    }),
    // Update user profile
    updateUserProfile: builder.mutation<UserRes, User>({
      query: (data) => ({
        url: "/users/profile",
        method: "PUT",
        data,
      }),
    }),
    // Delete user profile (you might want to use DELETE instead of PUT)
    deleteUserProfile: builder.mutation<UserRes, User>({
      query: (data) => ({
        url: "/users/profile",
        method: "DELETE", // Use DELETE method if appropriate
        data,
      }),
    }),
  }),
});

// Export hooks generated by the API slice
export const {
  useGetUserProfileQuery,
  useUpdateUserProfileMutation,
  useDeleteUserProfileMutation,
} = userApi;
